import asyncio
from aiogram import types
from aiogram.dispatcher import FSMContext

from filters import IsPrivate, IsPrivate_call
from keyboards.inline import kb_close_the_app, kb_start_question, kb_regisration_user, kb_menu_applications
from keyboards.inline.start_question import kb_cancel_all
from state import send_app_from_user, answer_from_admins
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData
from asyncio import sleep
from loader import dp, bot
from data.config import cfg
from utils.db_api import register_commands as commands, applications_commands, admins_commands

devid = cfg['dev_id']
tehchatid = cfg['teh_chat_id']


# –•–ï–ù–î–õ–ï–† –ù–ê–ß–ê–õ–ê –ü–û–î–ê–ß–ò –ó–ê–Ø–í–ö–ò –í –ì–†–£–ü–ü–£ –¢–ü
@dp.callback_query_handler(IsPrivate_call(), text_contains='start_question')
async def send_answer(call: types.CallbackQuery):
    await call.message.delete()
    global msg_answer
    try:
        user = await commands.select_user(call.from_user.id)
        markup_4 = InlineKeyboardMarkup(row_width=1,
                                        inline_keyboard=[
                                            [
                                                InlineKeyboardButton(text='‚ùå–û—Ç–º–µ–Ω–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏‚ùå',
                                                                     callback_data='quit')
                                            ]
                                        ])
        if user.status == 'active':
            await call.answer(cache_time=5)

            msg_answer = await call.message.answer(
                f"üìù –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Ñ–æ—Ä–º–∞—Ç –∑–∞—è–≤–∫–∏: –í—ã —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –º–∞–≥–∞–∑–∏–Ω –∏ –Ω–æ–º–µ—Ä –∫–∞—Å—Å—ã, "
                f"–≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å (–ú–æ–∂–Ω–æ –∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ):", reply_markup=markup_4)

            await send_app_from_user.text.set()
        elif user.status == 'baned':
            await call.message.answer('‚õî–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã!‚õî')
    except Exception:
        await call.message.answer(
            f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è @<a href="tg://user?id={call.from_user.id}">{call.from_user.first_name}</a>!\n'
            f'–í—ã –ø–æ–ø–∞–ª–∏ –≤ <b>—Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É</b> üõ†\n'
            f'–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω–æ <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</b>, '
            '–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É üìù<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b> –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π <b>/reg</b>',
            reply_markup=kb_regisration_user)


@dp.message_handler(IsPrivate(), state=send_app_from_user)
async def notice_text(message: types.Message, state: FSMContext):
    await message.delete()
    answer = message.text
    await state.update_data(text=answer)
    await message.answer(text=f'<b>–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏</b>: {answer}', reply_markup=kb_menu_applications)
    await send_app_from_user.state.set()
    await asyncio.sleep(3)
    await msg_answer.delete()


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É –¢–ü —Å —Ç–µ–∫—Å—Ç–æ–º
@dp.callback_query_handler(text='next', state=send_app_from_user.state)
async def start_notice(call: types.CallbackQuery, state: FSMContext):
    await call.message.delete()
    await call.answer(cache_time=5)
    markupdelete = types.ReplyKeyboardRemove()
    data = await state.get_data()
    text = data.get('text')
    await state.finish()

    # –ó–∞–ø–∏—Å—å –≤ –ë–î –∑–∞—è–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users = await commands.select_user(call.from_user.id)
    app_id = await applications_commands.count_id_application() + 1
    await applications_commands.add_application(app_id=app_id,
                                                user_id=call.from_user.id,
                                                tg_first_name=call.from_user.first_name,
                                                tg_last_name=call.from_user.last_name,
                                                famils=users.famils,
                                                username=users.username,
                                                phone=users.phone,
                                                magazin=users.magazin,
                                                text_app=text,
                                                reply_text_admin='NULL',
                                                by_admin=0)

    # –ö–Ω–æ–ø–∫–∞ –û—Ç–≤–µ—Ç–∏—Ç—å –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–≥–¥–∞ –ø—Ä–∏—Å—ã–ª–∞—é—Ç —Ç–µ–∫—Å—Ç
    news_callback = CallbackData("reply_answer", "user_id", "app_id")
    keyboard = InlineKeyboardMarkup(row_width=1)
    btn_reply = InlineKeyboardButton(text='üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å',
                                     callback_data=news_callback.new(user_id=call.message.chat.id, app_id=app_id))
    keyboard.add(btn_reply)
    try:
        await dp.bot.send_message(tehchatid, text=f"‚úâ | –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å\n"
                                                  f"<b>#Ô∏è‚É£–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {app_id}</b>\n"
                                                  f"<b>‚ùó–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:</b> üö´–û—Ç–∫—Ä—ã—Ç–∞!\n"
                                                  f'<b>üë§–û—Ç: <a href="tg://user?id={call.from_user.id}">{call.from_user.first_name}</a></b>\n'
                                                  f"<b>üÜîID:</b> {call.from_user.id}\n"
                                                  f"<b>üë§–§–∞–º–∏–ª–∏—è:</b> {users.famils} \n"
                                                  f"<b>üë§–ò–º—è:</b> {users.username} \n"
                                                  f"<b>üìû–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {users.phone}  \n"
                                                  f"<b>üè¢–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</b> {users.magazin} \n"
                                                  f"<b>‚Åâ–í–æ–ø—Ä–æ—Å:</b> <code>{text}</code>\n\nüìù –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ "
                                                  f"–≤–æ–ø—Ä–æ—Å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>üí¨–û—Ç–≤–µ—Ç–∏—Ç—å</b>",
                                  reply_markup=keyboard)
        await sleep(0.33)
    except Exception as e:
        cid = call.message.chat.id
        await call.message.answer(
            f"–£–ø—Å! <b>–û—à–∏–±–∫–∞!</b> –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, –æ—à–∏–±–∫–∞ —É–∂–µ <b>–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</b> —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.")
        await dp.bot.send_message(devid,
                                  f"–°–ª—É—á–∏–ª–∞—Å—å <b>–æ—à–∏–±–∫–∞</b> –≤ —á–∞—Ç–µ <b>{cid}</b>\n–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏: <code>{e}</code>")
    await call.message.answer('‚úâ –í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –æ—Ç–æ—Å–ª–∞–Ω! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏.',
                              reply_markup=markupdelete)


@dp.callback_query_handler(text='add_photo', state=send_app_from_user.state)
async def add_photo(call: types.CallbackQuery):
    await call.message.delete()
    global msg_photo_answer
    msg_photo_answer = await call.message.answer('<b>–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ</b>:', reply_markup=kb_cancel_all)
    await send_app_from_user.photo.set()


@dp.message_handler(IsPrivate(), state=send_app_from_user.photo, content_types=types.ContentType.PHOTO)
async def send_text(message: types.Message, state: FSMContext):
    await msg_photo_answer.delete()
    await message.delete()
    photo_file_id = message.photo[-1].file_id
    await state.update_data(photo=photo_file_id)
    data = await state.get_data()
    text = data.get('text')
    photo = data.get('photo')
    markup_2 = InlineKeyboardMarkup(row_width=2,
                                    inline_keyboard=[
                                        [
                                            InlineKeyboardButton(text='‚¨Ü–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='next'),
                                            InlineKeyboardButton(text='‚ùå–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='quit')
                                        ]
                                    ])
    await message.answer_photo(photo=photo, caption=f'<b>–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏</b>: {text}\n'
                                                    f'–ò –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ —Ñ–æ—Ç–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚¨Ü–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
                               reply_markup=markup_2)


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É –¢–ü —Å —Ñ–æ—Ç–æ
@dp.callback_query_handler(text='next', state=send_app_from_user.photo)
async def get_start_notice(call: types.CallbackQuery, state: FSMContext):
    await call.message.delete()
    await call.answer(cache_time=5)
    markupdelete = types.ReplyKeyboardRemove()
    data = await state.get_data()
    text = data.get('text')
    photo = data.get('photo')
    await state.finish()

    # ----------------------------------–ë–õ–û–ö –û–¢–í–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ----------------------------------------------------
    # –ó–∞–ø–∏—Å—å –≤ –ë–î –∑–∞—è–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users = await commands.select_user(call.from_user.id)
    app_id = await applications_commands.count_id_application() + 1
    await applications_commands.add_application(app_id=app_id,
                                                user_id=call.from_user.id,
                                                tg_first_name=call.from_user.first_name,
                                                tg_last_name=call.from_user.last_name,
                                                famils=users.famils,
                                                username=users.username,
                                                phone=users.phone,
                                                magazin=users.magazin,
                                                text_app=text,
                                                reply_text_admin='NULL',
                                                by_admin=0)

    # –ö–Ω–æ–ø–∫–∞ –û—Ç–≤–µ—Ç–∏—Ç—å –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–≥–¥–∞ –ø—Ä–∏—Å—ã–ª–∞—é—Ç —Ñ–æ—Ç–æ
    news_callback = CallbackData("reply_answer", "user_id", "app_id")
    keyboard = InlineKeyboardMarkup(row_width=1)
    menu_1 = InlineKeyboardButton(text='üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å',
                                  callback_data=news_callback.new(user_id=call.message.chat.id, app_id=app_id))
    keyboard.add(menu_1)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ —Å —Ñ–æ—Ç–æ –≤ –≥—Ä—É–ø–ø—É –¢–ü
    try:
        await dp.bot.send_photo(tehchatid, photo=photo, caption=f"‚úâ | –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å\n"
                                                                f"<b>#Ô∏è‚É£–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {app_id}</b>\n"
                                                                f"<b>‚ùó–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:</b> üö´–û—Ç–∫—Ä—ã—Ç–∞!\n"
                                                                f'<b>üë§–û—Ç: <a href="tg://user?id={call.from_user.id}">{call.from_user.first_name}</a></b>\n'
                                                                f'<b>üÜîID:</b> {call.from_user.id}\n'
                                                                f"<b>üë§–§–∞–º–∏–ª–∏—è:</b> {users.famils} \n"
                                                                f"<b>üë§–ò–º—è:</b> {users.username} \n"
                                                                f"<b>üìû–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {users.phone}  \n"
                                                                f"<b>üè¢–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</b> {users.magazin} \n"
                                                                f"<b>‚Åâ–í–æ–ø—Ä–æ—Å:</b> <code>{text}</code>\n\nüìù –ß—Ç–æ–±—ã "
                                                                f"–æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>üí¨–û—Ç–≤–µ—Ç–∏—Ç—å</b>",
                                reply_markup=keyboard)
        await sleep(0.33)
    except Exception as e:
        await call.message.answer(
            f"–£–ø—Å! <b>–û—à–∏–±–∫–∞!</b> –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, –æ—à–∏–±–∫–∞ —É–∂–µ <b>–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</b> —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.")
        await dp.bot.send_message(devid,
                                  f"–°–ª—É—á–∏–ª–∞—Å—å <b>–æ—à–∏–±–∫–∞</b> –≤ —á–∞—Ç–µ <b>{call.message.chat.id}</b>\n–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏: <code>{e}</code>")
    await call.message.answer('‚úâ –í–∞—à –≤–æ–ø—Ä–æ—Å –∏ —Ñ–æ—Ç–æ –±—ã–ª–∏ –æ—Ç–æ—Å–ª–∞–Ω—ã! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏.',
                              reply_markup=markupdelete)


@dp.message_handler(IsPrivate(), state=send_app_from_user.photo)
async def no_photo(message: types.Message):
    markup_3 = InlineKeyboardMarkup(row_width=2,
                                    inline_keyboard=[
                                        [
                                            InlineKeyboardButton(text='‚ùå–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='quit')
                                        ]
                                    ])
    await message.answer('–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ', reply_markup=markup_3)


@dp.callback_query_handler(text='quit',
                           state=[send_app_from_user.text, send_app_from_user.photo, send_app_from_user.state])
async def quit(call: types.CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await state.finish()
    await call.message.delete()
    await call.message.answer('‚õîÔ∏è–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–¥–∞—á—É –∑–∞—è–≤–∫–∏\n'
                              '–∏ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É ‚úâ <b>–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</b>',
                              reply_markup=kb_start_question)
    user = await commands.select_user(call.from_user.id)
    await bot.send_message(tehchatid,
                           f'‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{user.famils} {user.username}</b> –∏–∑ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ <b>{user.magazin}</b> '
                           f'–æ—Ç–º–µ–Ω–∏–ª –ø–æ–¥–∞—á—É –∑–∞—è–≤–∫–∏!')


# -----------------------------------------–ë–õ–û–ö –û–¢–í–ï–¢–ê –ù–ê –ó–ê–Ø–í–ö–£ –° –§–û–¢–û –ò –ë–ï–ó –§–û–¢–û--------------------------------------
@dp.callback_query_handler(text_contains='reply_answer')
async def reply_answer_yes(call: types.CallbackQuery, state: FSMContext):
    message_id = call.message.message_id
    admin_id = call.from_user.id
    await call.answer(cache_time=5)
    callback_data = call.data.split(":")
    user_id = callback_data[1]
    app_id = int(callback_data[2])
    answer = call.message.text
    user = await commands.select_user_id(int(user_id))
    reply_message_from_admin = await dp.bot.send_message(chat_id=tehchatid,
                                                         text=f"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –¥–ª—è <b>{user.famils} {user.username}</b>:",
                                                         reply_to_message_id=answer)
    await state.update_data(user_id=user_id, app_id=app_id, message_id=message_id,
                            reply_message_from_admin=reply_message_from_admin)

    # –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –û—Ç–≤–µ—Ç–∏—Ç—å –¥–æ –æ—Ç–≤–µ—Ç–∞
    kb_send_answer = InlineKeyboardMarkup(row=1)
    admin = await admins_commands.select_admin(int(admin_id))
    menu = InlineKeyboardButton(text=f'üìù–ó–∞—è–≤–∫—É –≤–∑—è–ª {admin.first_name}', callback_data="answer")
    kb_send_answer.add(menu)
    await dp.bot.edit_message_reply_markup(chat_id=tehchatid, message_id=message_id, reply_markup=kb_send_answer)
    await answer_from_admins.text.set()


@dp.message_handler(state=answer_from_admins.text, content_types=types.ContentType.ANY)
async def mailing_text(message: types.Message, state: FSMContext):
    global message_ids
    global app_id
    data = await state.get_data()
    user_id = data.get('user_id')
    app_id = data.get('app_id')
    reply_message_from_admin = data.get('reply_message_from_admin')
    message_ids = data.get('message_id')

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏—Ç—É–∞—Ü–∏—é, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - —ç—Ç–æ —Ñ–æ—Ç–æ
    if message.content_type == "photo":
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤–º–µ—Å—Ç–µ —Å —Ñ–æ—Ç–æ
        text = message.caption if message.caption else "–§–æ—Ç–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞"
        # –ü–æ–ª—É—á–∞–µ–º ID –§–û–¢–û
        photo_file_id = message.photo[-1].file_id
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await dp.bot.send_photo(chat_id=user_id, reply_to_message_id=reply_message_from_admin, photo=photo_file_id,
                                caption=f"üí¨ –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n<b>{text}</b>")

        await message.reply('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å!')
        await bot.send_message(user_id, f"‚ö†Ô∏è–ü—Ä–æ—Å—å–±–∞ <b>–∑–∞–∫—Ä—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏</b> –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏‚ö†Ô∏è")
        await bot.send_message(user_id, f"–ó–∞—è–≤–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞ ‚ùì‚ùì‚ùì", reply_markup=kb_close_the_app)

    else:  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
        text = message.text
        await dp.bot.send_message(chat_id=user_id, reply_to_message_id=reply_message_from_admin,
                                  text=f"üí¨ –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n<b>{text}</b>")

        # –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –∑–∞—è–≤–∫—É
        kb_send_answer = InlineKeyboardMarkup(row=1)
        menu = InlineKeyboardButton(text='‚úÖ–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω', callback_data="answer")
        kb_send_answer.add(menu)
        await dp.bot.edit_message_reply_markup(chat_id=tehchatid, message_id=message_ids,
                                               reply_markup=kb_send_answer)

        await message.reply('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å!')
        await bot.send_message(user_id, f"‚ö†Ô∏è–ü—Ä–æ—Å—å–±–∞ <b>–∑–∞–∫—Ä—ã–≤–∞—Ç—å –∑–∞—è–≤–∫–∏</b> –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏‚ö†Ô∏è")
        await bot.send_message(user_id, f"–ó–∞—è–≤–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞ ‚ùì‚ùì‚ùì", reply_markup=kb_close_the_app)

    # –ó–∞–ø–∏—Å—å –≤ –ë–î –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¢–ü(–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
    await applications_commands.answer_edit_reply(app_id=app_id,
                                                  reply_text_admin=text,
                                                  by_admin=message.from_user.id)
    await state.finish()


# –ó–ê–ö–†–´–¢–ò–ï –ó–ê–Ø–í–ö–ò –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ß–ï–†–ï–ó –ò–ù–õ–ê–ò–ù –ö–ù–û–ü–ö–£ "–ó–∞—è–≤–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞"
@dp.callback_query_handler(IsPrivate_call(), text_contains='app_closed')
async def app_closed(call: types.CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    reply_msg = await call.message.reply(f'–í—ã —É—Å–ø–µ—à–Ω–æ <b>–∑–∞–∫—Ä—ã–ª–∏</b> –∑–∞—è–≤–∫—É. üëç')
    await call.message.answer(f'–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–Ω–∞—á–∞–ª–∞,\n'
                              f'–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>‚úâ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</b>', reply_markup=kb_start_question)
    user = await commands.select_user(call.from_user.id)
    await bot.send_message(tehchatid,
                           f'‚úÖ –ó–∞—è–≤–∫–∞ ‚Ññ{app_id} –æ—Ç <b>{user.famils} {user.username}</b> –∏–∑ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ <b>{user.magazin}</b> '
                           f'—É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞!')

    # –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞—è–≤–∫–∞
    kb_send_answer = InlineKeyboardMarkup(row=1)
    menu = InlineKeyboardButton(text=f'‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞!', callback_data="answer")
    kb_send_answer.add(menu)

    # message_id –∏–∑ —Ö–µ–Ω–¥–ª–µ—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞—è–≤–∫—É
    await dp.bot.edit_message_reply_markup(chat_id=tehchatid, message_id=message_ids,

                                           reply_markup=kb_send_answer)
    await state.finish()
    await asyncio.sleep(5)
    await call.message.delete()
    await reply_msg.delete()


# –ù–ï –ó–ê–ö–†–´–¢–ò–ï –ó–ê–Ø–í–ö–ò –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ß–ï–†–ï–ó –ò–ù–õ–ê–ò–ù –ö–ù–û–ü–ö–£ "–ó–∞—è–≤–∫–∞ –Ω–µ –∑–∞–∫—Ä—ã—Ç–∞"
@dp.callback_query_handler(text_contains='app_open')
async def app_open(call: types.CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await call.message.delete()
    await state.finish()
    await call.message.answer('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π: ')
    await send_app_from_user.text.set()
    user = await commands.select_user(call.from_user.id)
    await bot.send_message(tehchatid,
                           f'üí¨–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{user.famils} {user.username}</b> –∏–∑ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ <b>{user.magazin}</b> '
                           f'–Ω–µ –∑–∞–∫—Ä—ã–ª –∑–∞—è–≤–∫—É, –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–ª –¥–∏–∞–ª–æ–≥!')

    # –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞—è–≤–∫–∞
    kb_send_answer = InlineKeyboardMarkup(row=1)
    menu = InlineKeyboardButton(text=f'‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –∑–∞–∫—Ä—ã—Ç–∞!', callback_data="answer")
    kb_send_answer.add(menu)

    # message_id –∏–∑ –∫–æ–ª–±—ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞—è–≤–∫—É
    await dp.bot.edit_message_reply_markup(chat_id=tehchatid, message_id=message_ids,

                                           reply_markup=kb_send_answer)
