import asyncio
from aiogram import types
from aiogram.dispatcher import FSMContext
from filters import IsPrivate, IsPrivate_call
# from keyboards.default import kb_menu_magazinreply
from keyboards.inline import kb_regisration_user, kb_cancel_registration_users, kb_start_question, kb_menu_magazinreply
from loader import dp, bot
from data.config import cfg
from state import reg
from utils.db_api import register_commands
from utils.misc import rate_limit
import re

teh_chat_id = cfg['teh_chat_id']


# –•–µ–Ω–¥–ª–µ—Ä –æ—Ç–º–µ–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@dp.callback_query_handler(IsPrivate_call(), text_contains='cancel_registration_users', state=[reg.familiya, reg.name, reg.phone, reg.magazine])
async def quit_registration(call: types.CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await call.message.delete()
    await state.finish()
    await call.message.answer('‚ùé <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b> ‚ùé\n\n'
                              '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏\n'
                              '–ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–∞–≤ –∫–ª–∞–≤–∏—à—É üìù <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>', reply_markup=kb_regisration_user)


# –•–µ–Ω–¥–ª–µ—Ä —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–∏–Ω –∫–Ω–æ–ø–∫—É
@rate_limit(limit=5)
@dp.callback_query_handler(IsPrivate_call(), text_contains='registration_users')
async def registration_user(call: types.CallbackQuery):
    global msg_start_reg
    await call.answer(cache_time=5)
    await call.message.delete()
    msg_start_reg = await call.message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è! –Ω–∞—á–∞–ª–∞—Å—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è,\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –§–∞–º–∏–ª–∏—é:\n'
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤', disable_web_page_preview=True, reply_markup=kb_cancel_registration_users)
    await reg.familiya.set()


# –•–µ–Ω–¥–ª–µ—Ä —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /reg
@rate_limit(limit=5)
@dp.message_handler(IsPrivate(), commands=['reg'])
async def registration_user_command(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è! –Ω–∞—á–∞–ª–∞—Å—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è,\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –§–∞–º–∏–ª–∏—é:\n'
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤', disable_web_page_preview=True, reply_markup=kb_cancel_registration_users)
    await reg.familiya.set()


# –•–µ–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –§–∞–º–∏–ª–∏–∏
@dp.message_handler(state=reg.familiya)
async def familiya_user(message: types.Message, state: FSMContext):
    global msg_name
    global message_id_familiya
    global message_chat_familiya
    text_familiya = message.text
    message_chat_familiya = message.chat.id
    message_id_familiya = message.message_id

    await state.update_data(familiya=text_familiya)
    msg_name = await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –ò–º—è:\n'
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω ')
    await reg.name.set()


# –•–µ–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –ò–º—è
@dp.message_handler(state=reg.name)
async def name_user(message: types.Message, state: FSMContext):
    global msg_number
    global message_id_nameuser
    global message_chat_nameuser
    text_name = message.text
    message_chat_nameuser = message.chat.id
    message_id_nameuser = message.message_id

    await state.update_data(name=text_name)
    msg_number = await message.answer(f'–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å +7:\n'
                                      f'–ù–∞–ø—Ä–∏–º–µ—Ä: +7–•–•–•–•–•–•–•–•–•–•')
    await reg.phone.set()


# –•–µ–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –ù–æ–º–µ—Ä–∞ –¢–µ–ª–µ—Ñ–æ–Ω–∞
@dp.message_handler(state=reg.phone)
async def phone_user(message: types.Message, state: FSMContext):
    global msg_mag
    global message_chat_phoneuser
    global message_id_phoneuser
    answer = message.text
    message_chat_phoneuser = message.chat.id
    message_id_phoneuser = message.message_id
    pattern = r'(^\+7)((\d{10})|(\s\(\d{3}\)\s\d{3}\s\d{2}\s\d{2}))'
    try:
        if re.match(pattern, answer):
                await state.update_data(phone=answer)
                msg_mag = await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω–∞:\n'
                                 '–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—è–ö–æ–º–ø–∞–Ω–∏—è', reply_markup=kb_menu_magazinreply)
                await reg.magazine.set()
        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +7:')
    except Exception:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–µ–Ω –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!')


# –•–µ–Ω–¥–ª–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ / –ú–∞–≥–∞–∑–∏–Ω–∞
@dp.callback_query_handler(IsPrivate_call(), text_contains="mag_", state=reg.magazine)
async def magazine_user(call: types.CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    global msg_actual
    who = "@" + call.from_user.get_mention(as_html=True)
    # –±–µ—Ä–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ —Å—Ä–µ–∑–∞–µ—Ç –ø—Ä–∏—Å—Ç–∞–≤–∫—É mag_ –¥–∞–ª–µ–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    magazin = call.data[4:]
    # —Å–ª–æ–≤–∞—Ä—å –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º –±–µ–∑ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏ mag_
    magazins = {'test1': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 1",
                'test2': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 2",
                'test3': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 3",
                'test4': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 4",
                'test5': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 5",
                'test6': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 6",
                'test7': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 7",
                'test8': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 8",
                'test9': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 9",
                'test10': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 10",
                'test11': "–ú–∞–≥–∞–∑–∏–Ω –¢–µ—Å—Ç 11"}

    actual_magazin = magazins[magazin]

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    msg_actual = await call.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>{actual_magazin}</b>")

    await state.update_data(magazine=actual_magazin)
    data = await state.get_data()
    familname = data.get('familiya')
    usernames = data.get('name')
    phone = data.get('phone')
    magaz = data.get('magazine')
    await register_commands.new_registration(user_id=call.from_user.id,
                                             tg_first_name=call.from_user.first_name,
                                             tg_last_name=call.from_user.last_name,
                                             famils=familname.capitalize(),
                                             username=usernames.capitalize(),
                                             phone=phone,
                                             magazin=magaz,
                                             status='active',
                                             access=int('0'),
                                             reason='no reason')


    await call.message.answer(f'‚úÖ<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n'
                              f'<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>:\n'
                              f'<b>–§–∞–º–∏–ª–∏—è</b>: {familname}\n'
                              f'<b>–ò–º—è:</b> {usernames}\n'
                              f'<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: {phone}\n'
                              f'<b>–ú–∞–≥–∞–∑–∏–Ω</b>: {magaz}\n'
                              f'–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n'
                              f'–ù–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É ‚úâ <b>–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</b>\n', reply_markup=kb_start_question)


    await bot.send_message(teh_chat_id, f'üìå<b>–£ –Ω–∞—Å –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>\n'
                         f'<b>üìçNickName</b>: {who}\n'
                         f'<b>üÜîID:</b> {call.from_user.id}\n'
                         f'<b>üë§–§–∞–º–∏–ª–∏—è</b>: {familname}\n'
                         f'<b>üë§–ò–º—è</b>: {usernames}\n'
                         f'<b>üìû–¢–µ–ª–µ—Ñ–æ–Ω</b>: {phone}\n'
                         f'<b>üè¢–ú–∞–≥–∞–∑–∏–Ω</b>: {magaz}\n')
    await state.finish()

    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
    await asyncio.sleep(1)
    await msg_start_reg.delete()
    await msg_mag.delete()
    await bot.delete_message(message_chat_familiya, message_id_familiya)
    await bot.delete_message(message_chat_nameuser, message_id_nameuser)
    await bot.delete_message(message_chat_phoneuser, message_id_phoneuser)
    await msg_name.delete()
    await msg_number.delete()
    await msg_actual.delete()